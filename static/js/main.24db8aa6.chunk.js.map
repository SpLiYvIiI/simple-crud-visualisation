{"version":3,"sources":["helper/notEmpty.js","helper/checkEmail.js","helper/checkUsername.js","helper/checkNumber.js","components/UserChanges.js","components/Users.js","components/Search.js","App.js","index.js"],"names":["notEmpty","obj","key","hasOwnProperty","checkEmail","email","RegExp","test","checkUsername","Username","checkNumber","number","i","length","UserChanges","addUser","updateUser","flipisChange","toUpdate","setToUpdate","isItUpdate","useState","username","setusername","setnumber","setemail","incorrectNumber","setincorrectNumber","incorrectUsername","setincorrectUsername","incorrectEmail","setincorrectEmail","Form","onSubmit","e","preventDefault","newObj","id","beforeUpdate","parseInt","Math","random","beforeAddUser","Group","Label","Control","required","placeholder","onChange","target","value","style","color","fomtSize","type","Button","variant","onClick","displayName","Users","Vincxeebi","switchToUpdate","deleteUser","Table","striped","bordered","hover","map","vincxa","window","confirm","beforeDelete","porpTypes","PropTypes","array","isRequired","func","Search","searchUser","searchBy","setsearchBy","searchVal","setsearchVal","InputGroup","className","DropdownButton","as","Prepend","title","Dropdown","Item","FormControl","aria-describedby","db","App","setVincxeebi","isChange","setisChange","Navbar","bg","Brand","Container","updated","concat","class","toSearch","criteria","filter","user","toLowerCase","indexOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24db8aa6.chunk.js","sourcesContent":["const notEmpty = (obj)=>{\n        for(var key in obj) {\n            if(obj.hasOwnProperty(key))\n                return true;\n        }\n        return false;\n};\nexport default notEmpty;","const checkEmail = (email) =>{\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n    if (!pattern.test(email)) \n        return false;\n    else return true;\n};\n\nexport default checkEmail;","\nconst checkUsername = (Username)=>{\n    var pattern = new RegExp(/^[a-zA-Z0-9_]{5,}[a-zA-Z]+[0-9]*$/);\n    if (!pattern.test(Username)) \n        return false;\n    else return true;\n};\nexport default checkUsername;","\nconst checkNumber = (number) =>{\n    for(let i =0; i < number.length; i++){\n        if(number[i] >= '0' && number[i] <= '9') continue;\n        else return false;\n    }\n    if(number.length < 8 || number.length > 15) return false;\n    return true\n};\nexport default checkNumber;","import React,{useState}from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport PropTypes from 'prop-types'\nimport notEmpty from '../helper/notEmpty'\nimport checkEmail from '../helper/checkEmail'\nimport checkUsername from '../helper/checkUsername'\nimport checkNumber from '../helper/checkNumber'\n\n\nconst UserChanges =  ({addUser,updateUser,flipisChange,toUpdate,setToUpdate})=> {\n    const isItUpdate = notEmpty(toUpdate)\n    const [username,setusername] = useState(toUpdate.username || '')\n    const [number,setnumber] = useState(toUpdate.number || '')\n    const [email,setemail] = useState(toUpdate.email || '')\n    const [incorrectNumber,setincorrectNumber] = useState(false)\n    const [incorrectUsername,setincorrectUsername] = useState(false)\n    const [incorrectEmail,setincorrectEmail] = useState(false)\n    const beforeAddUser = ()=>{\n        const newObj =  {\n          id : parseInt(Math.random() * (1500 - 1) + 1),\n          username : username,\n          number : number,\n          email : email\n        }\n        addUser(newObj)\n    }\n    const beforeUpdate = () => {\n      const newObj =  {\n        id : toUpdate.id,\n        username : username,\n        number : number,\n        email : email\n      }\n      updateUser(newObj)\n      setToUpdate({})\n  }\n    const beforeChange = (e)=>{\n    e.preventDefault()\n    if(checkUsername(username) && checkEmail(email) && checkNumber(number)){\n    if(!isItUpdate) beforeAddUser()\n    else beforeUpdate()\n    setusername('')\n    setnumber('')\n    setemail('')\n    flipisChange()\n    }\n    else {\n      if(!checkUsername(username)){\n        setusername('')\n        setincorrectUsername(true);\n      } \n      if(!checkEmail(email)){\n        setemail('')\n        setincorrectEmail(true)\n      } \n      if(!checkNumber(number)){\n        setnumber('')\n        setincorrectNumber(true)\n      }\n    }\n    }\n    return(\n<div>\n<Form onSubmit={beforeChange}>\n<Form.Group >\n  <Form.Label>Username</Form.Label>\n  <Form.Control required placeholder=\"Enter username\"  onChange={(e)=>{setusername(e.target.value)}} value = {username}/>\n  {incorrectUsername ? <Form.Label style={{color : 'red', fomtSize : '20px'}}>\n  <ul>\n  <li>Minimum 6 characters</li>\n  <li>username should contain at least one character</li>\n  <li>No special characters allowed except _</li>\n  <li>No space allowed</li>\n  </ul>\n  </Form.Label> : <></>}\n</Form.Group>\n<Form.Group >\n  <Form.Label>Number</Form.Label>\n  <Form.Control required placeholder=\"Enter number\" onChange={(e)=>{setnumber(e.target.value)}} value={number} />\n  {incorrectNumber ? <Form.Label style={{color : 'red', fomtSize : '20px'}}>\n  Your number should contain only digits and must be 8-15 digits long \n  </Form.Label> : <></>\n  }\n</Form.Group>\n<Form.Group>\n  <Form.Label>Email</Form.Label>\n  <Form.Control required placeholder = \"Enter email\" onChange={(e)=>{setemail(e.target.value)}} value={email} type=\"email\"/>\n  {incorrectEmail ? <Form.Label style={{color : 'red', fomtSize : '20px'}}>\n  Enter valid email\n  </Form.Label> : <></>\n}\n</Form.Group>\n<Button variant=\"dark\" type=\"submit\">\n  {isItUpdate ? 'Update user': 'Add user'}\n</Button>\n<Button variant=\"danger\" onClick={()=>{    \n    setusername('');\n    setnumber('');\n    setemail('');\n    flipisChange();\n    setToUpdate({})\n}}>Cancel</Button>\n</Form>\n</div>\n    )\n}\nUserChanges.displayName = 'UserAdd'\nUserChanges.propTypes = {\n  addUser: PropTypes.func.isRequired,\n  updateUser : PropTypes.func.isRequired,\n  flipisChange : PropTypes.func.isRequired,\n  toUpdate : PropTypes.object.isRequired,\n  setToUpdate : PropTypes.func.isRequired\n}\n\nexport default UserChanges;","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\nimport PropTypes from 'prop-types'\n\nconst Users = ({Vincxeebi, switchToUpdate, deleteUser}) => {\nconst beforeDelete = (vincxa)=>{\n    if(window.confirm(`you really want to delete user ${vincxa.username} ? `))\n    deleteUser(vincxa.id)\n}\nreturn(\n    <div>\n<Table striped bordered hover variant=\"dark\">\n<thead>\n  <tr>\n    <th>User ID</th>\n    <th>Username</th>\n    <th>Number</th>\n    <th>Email</th>\n  </tr>\n</thead>\n<tbody>\n  {\n    Vincxeebi.map(vincxa => {\n      return(\n        <tr key={vincxa.id}>\n          <td>{vincxa.id}</td>\n          <td>{vincxa.username}</td>\n          <td>{vincxa.number}</td>\n          <td>{vincxa.email}</td>\n          <td>\n            <Button onClick={()=>{switchToUpdate(vincxa)}} variant=\"dark\">Edit</Button>{' '}\n            <Button onClick={()=>{beforeDelete(vincxa)}} variant=\"danger\">Delete</Button> \n          </td>\n        </tr>\n      )\n    })\n  }\n</tbody>\n</Table>\n</div>\n)\n}\nUsers.displayName = 'Users';\nUsers.porpTypes = {\n  Vincxeebi : PropTypes.array.isRequired,\n  switchToUpdate : PropTypes.func.isRequired,\n  deleteUser : PropTypes.func.isRequired\n}\nexport default Users;","import {React,useState} from 'react'\nimport {FormControl,Dropdown,InputGroup,DropdownButton} from 'react-bootstrap'\nimport PropTypes from 'prop-types';\n\n\n\n\n const Search = ({searchUser})=>{\n    const [searchBy,setsearchBy] = useState('username')\n    const [searchVal,setsearchVal] = useState('')\n    return (<InputGroup className=\"mb-3\" >\n    <DropdownButton\n      as={InputGroup.Prepend}\n      variant=\"outline-secondary\"\n      title={\"Searching by : \" + searchBy}  \n      id=\"input-group-dropdown-1\"\n    >\n      <Dropdown.Item onClick={()=>{setsearchBy('username');searchUser(searchVal,'username')}}>Username</Dropdown.Item>\n      <Dropdown.Item onClick={()=>{setsearchBy('number');searchUser(searchVal,'number')}}>Number</Dropdown.Item>\n      <Dropdown.Item onClick={()=>{setsearchBy('email');searchUser(searchVal,'email')}}>Email</Dropdown.Item>\n    </DropdownButton>\n    <FormControl aria-describedby=\"basic-addon1\"  onChange={(e)=>{setsearchVal(e.target.value);searchUser(e.target.value,searchBy)}} placeholder={\"Enter \"+ searchBy} value = {searchVal}/>\n  </InputGroup>)\n}\nSearch.displayName = 'Search'\nSearch.propTypes = {\n  searchUser: PropTypes.func.isRequired\n}\nexport default  Search;","import React,{useState} from 'react'\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Navbar from 'react-bootstrap/Navbar'\nimport UserChanges from './components/UserChanges'\nimport Users from './components/Users'\nimport Search from './components/Search'\n\nlet db =\n[\n  {\n    id: 1,\n    username : \"atulie15\",\n    number : \"599134211\",\n    email : \"atuka@gmail.com\"\n  },\n  {\n    id: 2,\n    username : \"atulie2\",\n    number : \"557124211\",\n    email : \"giorgi@gmail.com\"\n  },\n  {\n    id: 3,\n    username : \"atulie3\",\n    number : \"558100212\",\n    email : \"vincxa@gmail.com\"\n  },\n  \n]\n\nconst App = ()=>{\n  const [Vincxeebi,setVincxeebi] = useState(db)\n  const [isChange,setisChange] = useState(false)\n  const [toUpdate,setToUpdate] = useState({})\n  const addUser = (newObj) =>{\n    const updated = db.concat(newObj)\n    db=updated\n    setVincxeebi(db)\n  } \n  const updateUser = (newObj) => {\n  const updated =  db.map(vincxa => vincxa.id === newObj.id ? newObj : vincxa)\n  db = updated\n  setVincxeebi(db)\n  }\n  const deleteUser = (id) => {\n    const updated =  db.filter(vincxa => vincxa.id !== id)\n    db = updated\n    setVincxeebi(db)\n  }\n  const searchUser = (toSearch,criteria) => {\n    if(toSearch === '') setVincxeebi(db)\n    else{\n      switch(criteria){\n        case 'username' :{\n          setVincxeebi(db.filter(user => user.username.toLowerCase().indexOf(toSearch.toLowerCase()) !== -1));\n          break;\n        } \n        case 'number' : {\n          setVincxeebi(db.filter(user => user.number.toLowerCase().indexOf(toSearch.toLowerCase()) !== -1));\n          break;\n        }\n        case 'email' : {\n          setVincxeebi(db.filter(user => user.email.toLowerCase().indexOf(toSearch.toLowerCase()) !== -1));\n          break;\n        }\n        default : break;\n      }\n    }\n  }\n  const flipisChange = ()=> setisChange(!isChange)\n  const switchToUpdate = (toUpdate) =>{\n    setToUpdate(toUpdate)\n    flipisChange()\n  }\n  return(\n    <div>\n  <Navbar bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand >simple-crud</Navbar.Brand>\n  </Navbar>\n  <Container>\n  {isChange ? \n  <UserChanges addUser={addUser} updateUser={updateUser} flipisChange={flipisChange} toUpdate={toUpdate}  setToUpdate={setToUpdate}/> \n  : \n  <button type=\"button\" class=\"btn btn-secondary btn-lg btn-block\" onClick={()=>{flipisChange()}}>Add user</button>}\n  <Search searchUser = {searchUser}/>\n  <Users Vincxeebi={Vincxeebi} switchToUpdate={switchToUpdate} deleteUser={deleteUser}/>\n  </Container>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App /> ,document.getElementById('root'));\n"],"sourceRoot":""}